,,
number of relevant pairs is 56,,
number of unique API Elements is 58,,
number of unique relevant API Elements is 31,,
-------------------------------------------,,
number of API Elements per Section in relevant,total,
-------------------------------------------,,
Lesson: Custom ,,
"<clt fqn=""java.util.Collection"" api=""Collection"" kind=""class"">",,
  Collection ,,
<,clt>ImplementationsHow to Write a Custom Implementation: 2,4.0
List ImplementationsGeneral-Purpose List Implementations: 3,3,
Map ImplementationsConcurrent Map Implementations: 2,4,
Wrapper ImplementationsWrapper Implementations: 0,1,
CompatibilityCompatibility: 0,3,
Set ImplementationsSet Implementations: 0,1,
List ImplementationsGeneral-Purpose List Implementations - part 2: 1,2,
Map ImplementationsSpecial-Purpose Map Implementations: 3,4,
CompatibilityBackward Compatibility - part 2: 0,3,
Set ImplementationsGeneral-Purpose Set Implementations: 3,5,
Lesson: AlgorithmsSorting: 2,2,
Wrapper ImplementationsChecked Interface Wrappers: 0,2,
Lesson: Custom ,,
"<clt fqn=""java.util.Collection"" api=""Collection"" kind=""class"">",,
  Collection ,,
<,clt>ImplementationsLesson: Custom Collection Implementations: 0,1.0
Map ImplementationsSpecial-Purpose Map Implementations - part 2: 1,2,
Lesson: Introduction to CollectionsBenefits of the Java Collections Framework: 0,1,
Convenience ImplementationsEmpty Set List and Map Constants: 0,5,
Lesson: Introduction to CollectionsWhat Is a Collections Framework?: 0,1,
Lesson: AlgorithmsComposition: 0,1,
Convenience ImplementationsImmutable Multiple-Copy List: 1,3,
Wrapper ImplementationsUnmodifiable Wrappers: 0,2,
CompatibilityBackward Compatibility: 1,5,
Summary of ImplementationsSummary of Implementations - part 2: 0,2,
Convenience ImplementationsImmutable Singleton Set: 4,4,
Answers to Questions and Exercises:Questions: 1,9,
Summary of ImplementationsSummary of Implementations: 0,10,
Lesson: AlgorithmsLesson: Algorithms: 0,3,
Convenience ImplementationsList View of an Array: 0,3,
Lesson: ImplementationsLesson: Implementations - part 4: 2,5,
Lesson: ImplementationsLesson: Implementations - part 2: 0,17,
Lesson: ImplementationsLesson: Implementations - part 3: 0,3,
Deque ImplementationsDeque Implementations: 0,2,
Deque ImplementationsGeneral-Purpose Deque Implementations: 3,3,
Map ImplementationsMap Implementations: 0,1,
Set ImplementationsGeneral-Purpose Set Implementations - part 2: 1,2,
API DesignReturn Values: 0,1,
Map ImplementationsGeneral-Purpose Map Implementations: 2,8,
Lesson: AlgorithmsShuffling: 1,4,
API DesignParameters: 0,4,
Answers to Questions and Exercises:Exercises: 0,2,
Lesson: AlgorithmsRoutine Data Manipulation: 0,3,
Wrapper ImplementationsSynchronization Wrappers - part 2: 0,3,
Lesson: Custom ,,
"<clt fqn=""java.util.Collection"" api=""Collection"" kind=""class"">",,
  Collection ,,
<,clt>ImplementationsHow to Write a Custom Implementation - part 2: 2,10.0
API DesignReturn Values - part 2: 1,2,
Lesson: Custom ,,
"<clt fqn=""java.util.Collection"" api=""Collection"" kind=""class"">",,
  Collection ,,
<,clt>ImplementationsReasons to Write an Implementation: 1,5.0
Set ImplementationsGeneral-Purpose Set Implementations - part 3: 1,3,
Lesson: AlgorithmsFinding Extreme Values: 2,3,
Lesson: AlgorithmsSorting - part 2: 2,3,
Lesson: AlgorithmsSorting - part 3: 1,3,
Deque ImplementationsConcurrent Deque Implementations: 2,2,
Set ImplementationsSpecial-Purpose Set Implementations: 3,3,
Queue ImplementationsGeneral-Purpose Queue Implementations: 2,6,
Wrapper ImplementationsSynchronization Wrappers: 1,6,
CompatibilityUpward Compatibility: 0,7,
List ImplementationsSpecial-Purpose List Implementations: 3,8,
Lesson: AlgorithmsSearching: 1,3,
Lesson: AlgorithmsSearching - part 2: 0,2,
Queue ImplementationsConcurrent Queue Implementations: 1,9,
,,
-------------------------------------------,,
number of unique API Elements per Section in relevant,total,
-------------------------------------------,,
AbstractSet: 0,1,
SynchronousQueue: 0,1,
ArrayBlockingQueue: 0,1,
Arrays: 0,6,
CopyOnWriteArrayList: 1,1,
SortedSet: 0,3,
LinkedList: 2,7,
Queue: 1,4,
Set: 3,12,
Serializable: 0,1,
AbstractList: 2,2,
LinkedBlockingQueue: 0,1,
AbstractSequentialList: 0,1,
Deque: 2,5,
Collections: 7,22,
Map: 3,19,
CopyOnWriteArraySet: 1,2,
BigInteger: 0,1,
UnsupportedOperationException: 0,2,
PriorityQueue: 1,2,
String: 0,1,
AbstractQueue: 0,1,
AbstractMap: 1,1,
ClassCastException: 0,1,
DelayQueue: 0,1,
Vector: 1,6,
PriorityBlockingQueue: 0,1,
LinkedBlockingDeque: 1,1,
ConcurrentModificationException: 0,1,
Comparator: 1,6,
SortedMap: 1,4,
EnumSet: 1,1,
AbstractCollection: 1,2,
LinkedHashMap: 1,2,
WeakHashMap: 1,1,
TreeSet: 1,4,
IdentityHashMap: 1,2,
ArrayList: 2,12,
ConcurrentMap: 2,2,
List: 4,14,
Hashtable: 0,5,
Object: 0,1,
HashSet: 3,6,
ListIterator: 0,1,
Collection: 5,22,
BlockingQueue: 2,2,
HashMap: 0,5,
File: 0,1,
TransferQueue: 0,1,
TreeMap: 0,2,
Enumeration: 0,3,
LinkedHashSet: 1,4,
EnumMap: 1,1,
ArrayDeque: 1,3,
Random: 0,1,
Integer: 0,1,
ConcurrentHashMap: 1,1,
Card: 0,1,
